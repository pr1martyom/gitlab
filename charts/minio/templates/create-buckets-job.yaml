{{- if and .Values.global.minio.enabled .Values.defaultBuckets }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "minio.createBucketsJobName" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{- include "gitlab.standardLabels" . | nindent 4 }}
{{- include "gitlab.commonLabels" . | nindent 4 }}
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        component: create-buckets
        {{- include "gitlab.standardLabels" . | nindent 8 }}
        {{- include "gitlab.commonLabels" . | nindent 8 }}
        {{- include "gitlab.podLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      restartPolicy: OnFailure
      {{- include "gitlab.nodeSelector" . | nindent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: {{ template "minio.fullname" . }}-config-cm
            - secret:
                name: {{ template "gitlab.minio.credentials.secret" . }}
{{- include "pullsecrets" .Values | indent 6}}
      containers:
      - name: minio-mc
        image: {{ .Values.minioMc.image }}:{{ .Values.minioMc.tag }}
        command: ["/bin/sh", "/config/initialize"]
        env:
          - name: MINIO_ENDPOINT
            value: {{ printf "%s-svc.%s.svc" (include "minio.fullname" .) .Release.Namespace }}
          - name: MINIO_PORT
            value: {{ .Values.servicePort | quote }}
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
        resources:
{{ toYaml .Values.init.resources | indent 10 }}
    {{- end }}
